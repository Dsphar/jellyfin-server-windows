trigger:
  batch: true
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pr:
  branches:
    include:
    - '*'

jobs:
  - job: build
    displayName: 'Build'

    strategy:
      matrix:
        installer:
          BuildConfiguration: windows-installer.amd64

    pool:
      vmImage: 'windows-latest'
    steps:
      - checkout: self
        clean: true
        submodules: true
        persistCredentials: true

      - task: CmdLine@2
        displayName: "Clone Server Branch"
        condition: in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'BuildCompletion')
        inputs:
          script: "git clone --single-branch --branch $(Build.SourceBranchName) --depth=1 https://github.com/jellyfin/jellyfin.git $(Build.SourcesDirectory)/jellyfin"

      - task: CmdLine@2
        displayName: "Clone Server Target"
        condition: in(variables['Build.Reason'], 'PullRequest')
        inputs:
          script: "git clone --single-branch --branch master --depth=1 https://github.com/jellyfin/jellyfin.git $(Build.SourcesDirectory)/jellyfin"

      - task: DownloadPipelineArtifact@2
        displayName: "Download Web Branch"
        condition: in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'BuildCompletion')
        inputs:
          path: '$(Agent.TempDirectory)'
          artifact: 'jellyfin-web-production'
          source: 'specific'
          project: 'jellyfin'
          pipeline: 'Jellyfin Web'
          runBranch: variables['Build.SourceBranch']

      - task: DownloadPipelineArtifact@2
        displayName: "Download Web Target"
        condition: eq(variables['Build.Reason'], 'PullRequest')
        inputs:
          path: '$(Agent.TempDirectory)'
          artifact: 'jellyfin-web-production'
          source: 'specific'
          project: 'jellyfin'
          pipeline: 'Jellyfin Web'
          runBranch: variables['System.PullRequest.TargetBranch']

      - task: ExtractFiles@1
        displayName: "Extract Web Client"
        inputs:
          archiveFilePatterns: '$(Agent.TempDirectory)/*.zip'
          destinationFolder: '$(Build.SourcesDirectory)/jellyfin/jellyfin-web'
          cleanDestinationFolder: false

      - task: CmdLine@2
        displayName: "Clone UX Repository"
        inputs:
          script: 'git clone --depth=1 https://github.com/jellyfin/jellyfin-ux $(Agent.TempDirectory)/jellyfin-ux'

      - task: PowerShell@2
        displayName: "Build NSIS Installer"
        inputs:
          targetType: "filePath"
          filePath: build-jellyfin.ps1
          arguments: -InstallFFMPEG -InstallNSSM -MakeNSIS -InstallTrayApp -UXLocation $(Agent.TempDirectory)\jellyfin-ux -InstallLocation $(Build.ArtifactStagingDirectory)
          errorActionPreference: "stop"
          workingDirectory: $(Build.SourcesDirectory)/jellyfin

      - task: CopyFiles@2
        displayName: "Copy NSIS Installer"
        inputs:
          sourceFolder: $(Build.SourcesDirectory)/nsis
          contents: "jellyfin*.exe"
          targetFolder: $(System.ArtifactsDirectory)/setup
          cleanTargetFolder: true
          overWrite: true
          flattenFolders: true

      - task: PublishPipelineArtifact@0
        displayName: "Publish Artifact"
        inputs:
          targetPath: "$(Build.ArtifactStagingDirectory)/setup"
          artifactName: "jellyfin-server-windows"

      - task: CopyFilesOverSSH@0
        displayName: 'Upload artifacts to repository server'
        inputs:
          sshEndpoint: repository
          sourceFolder: '$(Build.ArtifactStagingDirectory)/setup'
          contents: 'jellyfin-server-windows*'
          targetFolder: '/srv/repository/incoming/azure/$(Build.BuildNumber)/$(BuildConfiguration)'

      - task: SSH@0
        displayName: 'Update Unstable Repository'
        inputs:
          sshEndpoint: repository
          runOptions: 'inline'
          inline: 'sudo /srv/repository/collect-server.azure.sh /srv/repository/incoming/azure $(Build.BuildNumber) unstable'
